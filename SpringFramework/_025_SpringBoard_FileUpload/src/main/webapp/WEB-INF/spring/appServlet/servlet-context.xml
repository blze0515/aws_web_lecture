<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- resources: 정적파일을 모든 사용자가 접근할 수 있게 설정 -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/css/**" location="/css/" />
	<resources mapping="/js/**" location="/js/" />
	<resources mapping="/images/**" location="/images/" />
	<resources mapping="/upload/**" location="/upload/" />
	<resources mapping="/favicon.ico" location="/favicon.ico" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<!-- 컨트롤러 메소드에서 리턴할 때 responseBody가 항상 HTML화 되는데 String 리턴했을 때 
		 해당 jsp를 찾아줌-->
	<!-- 만약 return "aa"; => /WEB-INF/views/aa.jsp -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.ezen.springboard.controller" />
	
	<!-- multipart 형식의 데이터가 전송되면 처리해주는 bean 객체 생성 -->
	<!-- 파일업로드로 보내는 파일들은 모두 multipart 형식으로 전송 -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 최대 업로드 크기 지정 -->
		<!-- maxUploadSize의 value는 바이트 단위, -1은 제한없음을 의미함 -->
		<beans:property name="maxUploadSize" value="50000000"></beans:property>
		<!-- 인코딩 설정 -->
		<beans:property name="defaultEncoding" value="UTF-8"></beans:property>
	</beans:bean>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</beans:beans>
